version: "3.1"

services:
  api_instance_a:
      container_name: api_instance_a
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./src:/home/foo/vonux-challenge/src/
      ports:
        - '127.0.0.1:6000:6000'
      networks:
        - vonux_challenge_default_network
      environment:
        INSTANCE_HOSTNAME: "api_instance_a"
        INSTANCE_PORT: "6000"
        RUN_TESTS_ON_THIS_INSTANCE: "true"
      env_file:
        - .env
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: '0.5GB'

  api_instance_b:
      container_name: api_instance_b
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./src:/home/foo/vonux-challenge/src/
      ports:
        - '127.0.0.1:6001:6001'
      networks:
        - vonux_challenge_default_network
      environment:
        INSTANCE_HOSTNAME: "api_instance_b"
        INSTANCE_PORT: "6001"
        RUN_TESTS_ON_THIS_INSTANCE: "false"
      env_file:
        - .env
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: '0.5GB'

  redis_db:
    container_name: redis_db
    image: redis
    command: redis-server --save "" --appendonly no --maxclients 10000
    ports:
      - '127.0.0.1:7379:6379'
    networks:
      - vonux_challenge_default_network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1.0GB'

  nginx_server:
    container_name: nginx_server
    restart: always
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - vonux_challenge_default_network
    environment:
      - TZ=America/Sao_Paulo
      - DEBIAN_FRONTEND=noninteractive
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1.0GB'

networks:
  vonux_challenge_default_network:
    driver: bridge
